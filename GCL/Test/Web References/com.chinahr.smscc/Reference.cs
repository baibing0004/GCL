//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace Test.com.chinahr.smscc {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MessageServiceSoap", Namespace="http://sms.chinahr.com")]
    public partial class MessageService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback MessageAddOperationCompleted;
        
        private System.Threading.SendOrPostCallback myMessageAddOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MessageService() {
            this.Url = global::Test.Properties.Settings.Default.Test_com_chinahr_smscc_MessageService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event MessageAddCompletedEventHandler MessageAddCompleted;
        
        /// <remarks/>
        public event myMessageAddCompletedEventHandler myMessageAddCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.chinahr.com/MessageAdd", RequestNamespace="http://sms.chinahr.com", ResponseNamespace="http://sms.chinahr.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long MessageAdd(MessageList model) {
            object[] results = this.Invoke("MessageAdd", new object[] {
                        model});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void MessageAddAsync(MessageList model) {
            this.MessageAddAsync(model, null);
        }
        
        /// <remarks/>
        public void MessageAddAsync(MessageList model, object userState) {
            if ((this.MessageAddOperationCompleted == null)) {
                this.MessageAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnMessageAddOperationCompleted);
            }
            this.InvokeAsync("MessageAdd", new object[] {
                        model}, this.MessageAddOperationCompleted, userState);
        }
        
        private void OnMessageAddOperationCompleted(object arg) {
            if ((this.MessageAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.MessageAddCompleted(this, new MessageAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://sms.chinahr.com/myMessageAdd", RequestNamespace="http://sms.chinahr.com", ResponseNamespace="http://sms.chinahr.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long myMessageAdd(MessageList model, int isTodayCount) {
            object[] results = this.Invoke("myMessageAdd", new object[] {
                        model,
                        isTodayCount});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void myMessageAddAsync(MessageList model, int isTodayCount) {
            this.myMessageAddAsync(model, isTodayCount, null);
        }
        
        /// <remarks/>
        public void myMessageAddAsync(MessageList model, int isTodayCount, object userState) {
            if ((this.myMessageAddOperationCompleted == null)) {
                this.myMessageAddOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmyMessageAddOperationCompleted);
            }
            this.InvokeAsync("myMessageAdd", new object[] {
                        model,
                        isTodayCount}, this.myMessageAddOperationCompleted, userState);
        }
        
        private void OnmyMessageAddOperationCompleted(object arg) {
            if ((this.myMessageAddCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.myMessageAddCompleted(this, new myMessageAddCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.225")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://sms.chinahr.com")]
    public partial class MessageList {
        
        private long idField;
        
        private string phoneField;
        
        private string phoneGroupField;
        
        private string messageField;
        
        private string sourceIPField;
        
        private int sourceTypeField;
        
        private int rankField;
        
        private int sendTypeField;
        
        private int isOverField;
        
        private System.DateTime sms_TimeField;
        
        private System.DateTime send_TimeField;
        
        /// <remarks/>
        public long id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Phone {
            get {
                return this.phoneField;
            }
            set {
                this.phoneField = value;
            }
        }
        
        /// <remarks/>
        public string PhoneGroup {
            get {
                return this.phoneGroupField;
            }
            set {
                this.phoneGroupField = value;
            }
        }
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public string SourceIP {
            get {
                return this.sourceIPField;
            }
            set {
                this.sourceIPField = value;
            }
        }
        
        /// <remarks/>
        public int SourceType {
            get {
                return this.sourceTypeField;
            }
            set {
                this.sourceTypeField = value;
            }
        }
        
        /// <remarks/>
        public int Rank {
            get {
                return this.rankField;
            }
            set {
                this.rankField = value;
            }
        }
        
        /// <remarks/>
        public int SendType {
            get {
                return this.sendTypeField;
            }
            set {
                this.sendTypeField = value;
            }
        }
        
        /// <remarks/>
        public int IsOver {
            get {
                return this.isOverField;
            }
            set {
                this.isOverField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Sms_Time {
            get {
                return this.sms_TimeField;
            }
            set {
                this.sms_TimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime Send_Time {
            get {
                return this.send_TimeField;
            }
            set {
                this.send_TimeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void MessageAddCompletedEventHandler(object sender, MessageAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class MessageAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal MessageAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void myMessageAddCompletedEventHandler(object sender, myMessageAddCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class myMessageAddCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal myMessageAddCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591