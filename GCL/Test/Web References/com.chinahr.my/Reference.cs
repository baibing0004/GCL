//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.296 版自动生成。
// 
#pragma warning disable 1591

namespace Test.com.chinahr.my {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.ComponentModel;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IsWriteApplyHtmlSoap", Namespace="http://tempuri.org/")]
    public partial class IsWriteApplyHtml : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback IsReBuildOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsReBuildAndGetFilePathOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsReBuildAndGetHRDBPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsReBuildAndGetFileOldPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCVHtmlOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IsWriteApplyHtml() {
            this.Url = global::Test.Properties.Settings.Default.Test_com_chinahr_my_IsWriteApplyHtml;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event IsReBuildCompletedEventHandler IsReBuildCompleted;
        
        /// <remarks/>
        public event IsReBuildAndGetFilePathCompletedEventHandler IsReBuildAndGetFilePathCompleted;
        
        /// <remarks/>
        public event IsReBuildAndGetHRDBPathCompletedEventHandler IsReBuildAndGetHRDBPathCompleted;
        
        /// <remarks/>
        public event IsReBuildAndGetFileOldPathCompletedEventHandler IsReBuildAndGetFileOldPathCompleted;
        
        /// <remarks/>
        public event GetCVHtmlCompletedEventHandler GetCVHtmlCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsReBuild", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsReBuild(int ApplyID, long cvid, byte ehrLang) {
            object[] results = this.Invoke("IsReBuild", new object[] {
                        ApplyID,
                        cvid,
                        ehrLang});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsReBuildAsync(int ApplyID, long cvid, byte ehrLang) {
            this.IsReBuildAsync(ApplyID, cvid, ehrLang, null);
        }
        
        /// <remarks/>
        public void IsReBuildAsync(int ApplyID, long cvid, byte ehrLang, object userState) {
            if ((this.IsReBuildOperationCompleted == null)) {
                this.IsReBuildOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsReBuildOperationCompleted);
            }
            this.InvokeAsync("IsReBuild", new object[] {
                        ApplyID,
                        cvid,
                        ehrLang}, this.IsReBuildOperationCompleted, userState);
        }
        
        private void OnIsReBuildOperationCompleted(object arg) {
            if ((this.IsReBuildCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsReBuildCompleted(this, new IsReBuildCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsReBuildAndGetFilePath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsReBuildAndGetFilePath(int ApplyID, long cvid, byte ehrLang, out string strFilePath) {
            object[] results = this.Invoke("IsReBuildAndGetFilePath", new object[] {
                        ApplyID,
                        cvid,
                        ehrLang});
            strFilePath = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsReBuildAndGetFilePathAsync(int ApplyID, long cvid, byte ehrLang) {
            this.IsReBuildAndGetFilePathAsync(ApplyID, cvid, ehrLang, null);
        }
        
        /// <remarks/>
        public void IsReBuildAndGetFilePathAsync(int ApplyID, long cvid, byte ehrLang, object userState) {
            if ((this.IsReBuildAndGetFilePathOperationCompleted == null)) {
                this.IsReBuildAndGetFilePathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsReBuildAndGetFilePathOperationCompleted);
            }
            this.InvokeAsync("IsReBuildAndGetFilePath", new object[] {
                        ApplyID,
                        cvid,
                        ehrLang}, this.IsReBuildAndGetFilePathOperationCompleted, userState);
        }
        
        private void OnIsReBuildAndGetFilePathOperationCompleted(object arg) {
            if ((this.IsReBuildAndGetFilePathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsReBuildAndGetFilePathCompleted(this, new IsReBuildAndGetFilePathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsReBuildAndGetHRDBPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsReBuildAndGetHRDBPath(int ApplyID, long cvid, byte ehrLang, out string strFilePath) {
            object[] results = this.Invoke("IsReBuildAndGetHRDBPath", new object[] {
                        ApplyID,
                        cvid,
                        ehrLang});
            strFilePath = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsReBuildAndGetHRDBPathAsync(int ApplyID, long cvid, byte ehrLang) {
            this.IsReBuildAndGetHRDBPathAsync(ApplyID, cvid, ehrLang, null);
        }
        
        /// <remarks/>
        public void IsReBuildAndGetHRDBPathAsync(int ApplyID, long cvid, byte ehrLang, object userState) {
            if ((this.IsReBuildAndGetHRDBPathOperationCompleted == null)) {
                this.IsReBuildAndGetHRDBPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsReBuildAndGetHRDBPathOperationCompleted);
            }
            this.InvokeAsync("IsReBuildAndGetHRDBPath", new object[] {
                        ApplyID,
                        cvid,
                        ehrLang}, this.IsReBuildAndGetHRDBPathOperationCompleted, userState);
        }
        
        private void OnIsReBuildAndGetHRDBPathOperationCompleted(object arg) {
            if ((this.IsReBuildAndGetHRDBPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsReBuildAndGetHRDBPathCompleted(this, new IsReBuildAndGetHRDBPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/IsReBuildAndGetFileOldPath", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsReBuildAndGetFileOldPath(int ApplyID, long cvid, byte ehrLang, out string strFilePath) {
            object[] results = this.Invoke("IsReBuildAndGetFileOldPath", new object[] {
                        ApplyID,
                        cvid,
                        ehrLang});
            strFilePath = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsReBuildAndGetFileOldPathAsync(int ApplyID, long cvid, byte ehrLang) {
            this.IsReBuildAndGetFileOldPathAsync(ApplyID, cvid, ehrLang, null);
        }
        
        /// <remarks/>
        public void IsReBuildAndGetFileOldPathAsync(int ApplyID, long cvid, byte ehrLang, object userState) {
            if ((this.IsReBuildAndGetFileOldPathOperationCompleted == null)) {
                this.IsReBuildAndGetFileOldPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsReBuildAndGetFileOldPathOperationCompleted);
            }
            this.InvokeAsync("IsReBuildAndGetFileOldPath", new object[] {
                        ApplyID,
                        cvid,
                        ehrLang}, this.IsReBuildAndGetFileOldPathOperationCompleted, userState);
        }
        
        private void OnIsReBuildAndGetFileOldPathOperationCompleted(object arg) {
            if ((this.IsReBuildAndGetFileOldPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsReBuildAndGetFileOldPathCompleted(this, new IsReBuildAndGetFileOldPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCVHtml", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCVHtml(long cvid, byte ehrLang) {
            object[] results = this.Invoke("GetCVHtml", new object[] {
                        cvid,
                        ehrLang});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCVHtmlAsync(long cvid, byte ehrLang) {
            this.GetCVHtmlAsync(cvid, ehrLang, null);
        }
        
        /// <remarks/>
        public void GetCVHtmlAsync(long cvid, byte ehrLang, object userState) {
            if ((this.GetCVHtmlOperationCompleted == null)) {
                this.GetCVHtmlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCVHtmlOperationCompleted);
            }
            this.InvokeAsync("GetCVHtml", new object[] {
                        cvid,
                        ehrLang}, this.GetCVHtmlOperationCompleted, userState);
        }
        
        private void OnGetCVHtmlOperationCompleted(object arg) {
            if ((this.GetCVHtmlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCVHtmlCompleted(this, new GetCVHtmlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsReBuildCompletedEventHandler(object sender, IsReBuildCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsReBuildCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsReBuildCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsReBuildAndGetFilePathCompletedEventHandler(object sender, IsReBuildAndGetFilePathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsReBuildAndGetFilePathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsReBuildAndGetFilePathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strFilePath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsReBuildAndGetHRDBPathCompletedEventHandler(object sender, IsReBuildAndGetHRDBPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsReBuildAndGetHRDBPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsReBuildAndGetHRDBPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strFilePath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void IsReBuildAndGetFileOldPathCompletedEventHandler(object sender, IsReBuildAndGetFileOldPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsReBuildAndGetFileOldPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsReBuildAndGetFileOldPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strFilePath {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    public delegate void GetCVHtmlCompletedEventHandler(object sender, GetCVHtmlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.1")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCVHtmlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCVHtmlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591